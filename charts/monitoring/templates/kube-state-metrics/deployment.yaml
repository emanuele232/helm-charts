apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mia-monitoring.kubeStateMetrics.fullname" . | quote }}
  labels:
    {{- include "mia-monitoring.kubeStateMetrics.labels" . | nindent 4 }}
  {{- with .Values.deploy.annotations }}
  annotations: &Annotations
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.kubeStateMetrics.replicas }}
  selector:
    matchLabels: &Labels
      {{- include "mia-monitoring.kubeStateMetrics.selectorLabels" . | nindent 6 }}
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: "50%"
      maxUnavailable: "25%"
  template:
    metadata:
      labels: *Labels
      {{- if .Values.deploy.annotations }}
      annotations: *Annotations
      {{- end }}
    spec:
      serviceAccountName: {{ include "mia-monitoring.kubeStateMetrics.serviceAccountName" . | quote }}
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 60
      {{- with .Values.deploy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "mia-monitoring.kubeStateMetrics.fullname" . | quote }}
          image: {{ include "mia-monitoring.kubeStateMetrics.image" . | quote }}
          args:
            - "--collectors=certificatesigningrequests"
            - "--collectors=configmaps"
            - "--collectors=cronjobs"
            - "--collectors=daemonsets"
            - "--collectors=deployments"
            - "--collectors=endpoints"
            - "--collectors=horizontalpodautoscalers"
            - "--collectors=ingresses"
            - "--collectors=jobs"
            - "--collectors=limitranges"
            - "--collectors=mutatingwebhookconfigurations"
            - "--collectors=namespaces"
            - "--collectors=networkpolicies"
            - "--collectors=nodes"
            - "--collectors=persistentvolumeclaims"
            - "--collectors=persistentvolumes"
            - "--collectors=poddisruptionbudgets"
            - "--collectors=pods"
            - "--collectors=replicasets"
            - "--collectors=replicationcontrollers"
            - "--collectors=resourcequotas"
            - "--collectors=secrets"
            - "--collectors=services"
            - "--collectors=statefulsets"
            - "--collectors=storageclasses"
            - "--collectors=validatingwebhookconfigurations"
            - "--collectors=volumeattachments"
            - "--port=8080"
          {{- with .Values.kubeStateMetrics.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: "web"
              containerPort: 8080
              protocol: "TCP"
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: "/"
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            privileged: false
            capabilities:
              drop:
                - "all"
      securityContext:
        runAsNonRoot: true
        runAsUser: 10000
        runAsGroup: 11000
        fsGroup: 12000
      {{- with .Values.kubeStateMetrics.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubeStateMetrics.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubeStateMetrics.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
